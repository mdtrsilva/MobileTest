<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Tharindus-MacBook.local" ignored="0" name="Default test" tests="1" failures="0" timestamp="2022-09-28T17:27:08 IST" time="2.434" errors="0">
  <testcase name="@BeforeClass configureAppium" time="2.337" classname="mobileTest.appium.BaseTest">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Neither ANDROID_HOME nor ANDROID_SDK_ROOT environment variable was exported. Read https://developer.android.com/studio/command-line/variables for more details
Build info: version: &amp;apos;4.4.0&amp;apos;, revision: &amp;apos;e5c75ed026a&amp;apos;
System info: host: &amp;apos;Tharindus-MacBook.local&amp;apos;, ip: &amp;apos;2402:4000:1247:6f5:d00d:5713:58fd:743b%en0&amp;apos;, os.name: &amp;apos;Mac OS X&amp;apos;, os.arch: &amp;apos;x86_64&amp;apos;, os.version: &amp;apos;12.5&amp;apos;, java.version: &amp;apos;1.8.0_341&amp;apos;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{platformName=ANDROID, appium:deviceName=PIXELPHONE, appium:automationName=UIAutomator2, appium:app=//Users//tharindu//git//MobileTest//MobileTest//src//test//java//resources//ApiDemos-debug.apk}], desiredCapabilities=Capabilities {appium:app: //Users//tharindu//git//Mob..., appium:automationName: UIAutomator2, appium:deviceName: PIXELPHONE, platformName: ANDROID}}]
Capabilities {}">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: An unknown server-side error occurred while processing the command. Original error: Neither ANDROID_HOME nor ANDROID_SDK_ROOT environment variable was exported. Read https://developer.android.com/studio/command-line/variables for more details
Build info: version: '4.4.0', revision: 'e5c75ed026a'
System info: host: 'Tharindus-MacBook.local', ip: '2402:4000:1247:6f5:d00d:5713:58fd:743b%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '12.5', java.version: '1.8.0_341'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{platformName=ANDROID, appium:deviceName=PIXELPHONE, appium:automationName=UIAutomator2, appium:app=//Users//tharindu//git//MobileTest//MobileTest//src//test//java//resources//ApiDemos-debug.apk}], desiredCapabilities=Capabilities {appium:app: //Users//tharindu//git//Mob..., appium:automationName: UIAutomator2, appium:deviceName: PIXELPHONE, platformName: ANDROID}}]
Capabilities {}
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:144)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:126)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:102)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:146)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:180)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:547)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:224)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:79)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:87)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:116)
at mobileTest.appium.BaseTest.configureAppium(BaseTest.java:23)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeClass configureAppium -->
  <testcase name="@AfterClass tearDown" time="-1.664366228257E9" classname="mobileTest.appium.BaseTest">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase name="setupApp" time="0.0" classname="mobileTest.appium.MobileTest">
    <skipped/>
  </testcase> <!-- setupApp -->
</testsuite> <!-- Default test -->
